[{"D:\\projects\\razerpay_test\\front\\razerpay_test_front\\src\\index.js":"1","D:\\projects\\razerpay_test\\front\\razerpay_test_front\\src\\reportWebVitals.js":"2","D:\\projects\\razerpay_test\\front\\razerpay_test_front\\src\\App.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"6","hashOfConfig":"5"},{"size":2520,"mtime":1607491957078,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"19hxg4u",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"D:\\projects\\razerpay_test\\front\\razerpay_test_front\\src\\index.js",[],["16","17"],"D:\\projects\\razerpay_test\\front\\razerpay_test_front\\src\\reportWebVitals.js",[],"D:\\projects\\razerpay_test\\front\\razerpay_test_front\\src\\App.js",["18"],"import logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\nimport { Component, React } from 'react';\n\n\n\n\nclass App extends Component{\n\n  state={\n    amt:0,\n    pmt:\"\",\n    ramt:-1,\n  }\n\n\n   paymentHandler = () => {\n\n    const API_URL = 'http://localhost:8080/'\n    const orderUrl = `${API_URL}order/${this.state.amt}`;\n\n\n  axios.get(orderUrl).then(res=>{\nthis.takePayment(res.data)\n    })\n\n  }\n\n  takePayment=(response)=>{\n\n    console.log(response);\n    const API_URL = 'http://localhost:8080/'\n\n\n    const options = {\n      key:response.razorPay.secretKey ,\n      name: \"Your App Name\",\n      description: \"Some Description\",\n      order_id: response.razorpayOrderId,\n      amount:+response.razorPay.applicationFee,\n      handler: async (response) => {\n        try {\n         const paymentId = response.razorpay_payment_id;\n         const url = `${API_URL}capture/${paymentId}/${this.state.amt}`;\n\n\n         const captureResponse =  axios.post(url, {})\n          \n         axios.get(url).then(res=>console.log(res.data));\n\n       //  console.log(captureResponse.data);\n        } catch (err) {\n          console.log(err);\n        }\n      },\n      theme: {\n        color: \"#686CFD\",\n      },\n    };\n    const rzp1 = new window.Razorpay(options);\n    rzp1.open();\n    };\n\n\n    refundHandler=()=>{\n\n      if(this.state.ramt===-1)\n         axios.post(\"http://localhost:8080/refund\",this.state.pmt)\n      .then(res=>console.log(res.data));\n\n      else\n      axios.post(\"http://localhost:8080/refund/\"+this.state.ramt,this.state.pmt)\n      .then(res=>console.log(res.data));\n    }\n\n\n  render(){\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      \n      </header>\n\n\n <form>\n        <script src=\"https://checkout.razorpay.com/v1/payment-button.js\" data-payment_button_id=\"pl_GAbXsrL5h6ZYP6\"> \n        </script> </form>\n\n         <input value={this.state.amt} onChange={(e)=>this.setState({amt:e.target.value})} type=\"number\"/>\n      <button onClick={this.paymentHandler}>\n        GO\n      </button>\n        \n        <br/><br/><br/>\n        <hr/>\n        <br/><br/><br/>\n\n        <input value={this.state.pmt} onChange={(e)=>this.setState({pmt:e.target.value})} type=\"text\"/>\n        <input value={this.state.ramt} onChange={(e)=>this.setState({ramt:e.target.value})} type=\"number\"/>\n\n        <button onClick={this.refundHandler}>\n        GO\n      </button>\n        \n\n     \n\n    </div>\n  );\n  }\n\n\n}\n\nexport default App;\n",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":48,"column":16,"nodeType":"25","messageId":"26","endLine":48,"endColumn":31},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"no-unused-vars","'captureResponse' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]